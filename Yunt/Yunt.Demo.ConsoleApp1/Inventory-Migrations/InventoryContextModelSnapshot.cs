// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Yunt.Common;
using Yunt.Demo.ConsoleApp1;

namespace Yunt.Demo.ConsoleApp1.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Yunt.Inventory.Repository.EF.Models.IdModel.SparePartsIdFactories", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SparePartsIndex");

                    b.Property<string>("SparePartsTypeId");

                    b.Property<int>("Time");

                    b.HasKey("Id");

                    b.ToTable("SparePartsIdFactories");
                });

            modelBuilder.Entity("Yunt.Inventory.Repository.EF.Models.InventoryAlarmInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreateTime");

                    b.Property<int>("InventoryBalance");

                    b.Property<string>("SparePartsId");

                    b.HasKey("Id");

                    b.ToTable("InventoryAlarmInfo");
                });

            modelBuilder.Entity("Yunt.Inventory.Repository.EF.Models.SpareParts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("FactoryInfo");

                    b.Property<string>("InOperator");

                    b.Property<long>("InTime");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("MotorId");

                    b.Property<string>("OutOperator");

                    b.Property<long>("OutTime");

                    b.Property<string>("SparePartsId");

                    b.Property<string>("SparePartsName");

                    b.Property<int>("SparePartsStatus");

                    b.Property<string>("SparePartsTypeId");

                    b.Property<long>("UselessTime");

                    b.Property<string>("WareHousesId");

                    b.HasKey("Id");

                    b.ToTable("SpareParts");
                });

            modelBuilder.Entity("Yunt.Inventory.Repository.EF.Models.SparePartsType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreateTime");

                    b.Property<int>("InventoryAlarmLimits");

                    b.Property<string>("Name");

                    b.Property<string>("SparePartsTypeId");

                    b.HasKey("Id");

                    b.ToTable("SparePartsType");
                });

            modelBuilder.Entity("Yunt.Inventory.Repository.EF.Models.WareHouses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreateTime");

                    b.Property<string>("Keeper");

                    b.Property<string>("MotorTypeId");

                    b.Property<string>("Name");

                    b.Property<string>("Remark");

                    b.Property<string>("WareHousesId");

                    b.HasKey("Id");

                    b.ToTable("WareHouses");
                });
#pragma warning restore 612, 618
        }
    }
}
