// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Yunt.Demo.ConsoleApp1;

namespace Yunt.Demo.ConsoleApp1.Migrations
{
    [DbContext(typeof(XmlContext))]
    partial class XmlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Collectdevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Index");

                    b.Property<string>("Productionline_Id");

                    b.Property<string>("Remark");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("Collectdevice");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Dataconfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Collectdevice_Index");

                    b.Property<int>("Count");

                    b.Property<int>("Datatype_Id");

                    b.HasKey("Id");

                    b.ToTable("Dataconfig");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Dataformmodel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Bit");

                    b.Property<string>("BitDesc");

                    b.Property<string>("Collectdevice_Index");

                    b.Property<string>("DataPhysicalAccuracy");

                    b.Property<string>("DataPhysicalFeature");

                    b.Property<int?>("DataPhysicalId");

                    b.Property<string>("DataType");

                    b.Property<int?>("DebugValue");

                    b.Property<string>("DeviceId");

                    b.Property<int?>("Divalue");

                    b.Property<int?>("Dovalue");

                    b.Property<string>("FieldParam");

                    b.Property<string>("FieldParamEn");

                    b.Property<int?>("FormatId");

                    b.Property<int?>("Index");

                    b.Property<int?>("LineId");

                    b.Property<string>("MachineId");

                    b.Property<string>("MachineName");

                    b.Property<string>("MotorId");

                    b.Property<string>("MotorTypeName");

                    b.Property<DateTime?>("Time");

                    b.Property<string>("Unit");

                    b.Property<double?>("Value");

                    b.Property<int?>("WarnValue");

                    b.HasKey("Id");

                    b.ToTable("Dataformmodel");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Datatype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Bit");

                    b.Property<string>("Description");

                    b.Property<int>("InByte");

                    b.Property<int>("OutIntArray");

                    b.HasKey("Id");

                    b.ToTable("Datatype");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Messagequeue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Collectdevice_Index");

                    b.Property<string>("Com_Type");

                    b.Property<string>("Host");

                    b.Property<string>("Name");

                    b.Property<int>("Port");

                    b.Property<string>("Pwd");

                    b.Property<string>("Remark");

                    b.Property<string>("Route_Key");

                    b.Property<DateTime>("Time");

                    b.Property<int>("Timer");

                    b.Property<string>("Username");

                    b.Property<int>("Write_Read");

                    b.HasKey("Id");

                    b.ToTable("Messagequeue");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Motorparams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("MotorTypeId");

                    b.Property<string>("Param");

                    b.Property<int>("PhysicId");

                    b.Property<DateTime?>("Time");

                    b.HasKey("Id");

                    b.ToTable("Motorparams");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Motortype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MotorTypeId");

                    b.Property<string>("MotorTypeName");

                    b.Property<DateTime?>("Time");

                    b.HasKey("Id");

                    b.ToTable("Motortype");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.Physicfeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Accur");

                    b.Property<int>("Format");

                    b.Property<string>("PhysicType");

                    b.Property<DateTime?>("Time");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.ToTable("Physicfeature");
                });

            modelBuilder.Entity("Yunt.Xml.Repository.EF.Models.ProductionPlans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("End");

                    b.Property<int>("FinishCy1");

                    b.Property<int>("FinishCy2");

                    b.Property<int>("FinishCy3");

                    b.Property<int>("FinishCy4");

                    b.Property<int>("MainCy");

                    b.Property<string>("ProductionlineId");

                    b.Property<string>("Remark");

                    b.Property<int>("Start");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("ProductionPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
